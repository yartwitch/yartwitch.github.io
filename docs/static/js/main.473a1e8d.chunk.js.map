{"version":3,"sources":["DataParser.js","TemplateParser.js","ContentSheet.js","DataSheet.js","ChalangeBooks.js","App.js","serviceWorker.js","index.js"],"names":["DataParser","tables","rows","split","tbl","ri","length","trim","push","documentId","grdId","url","Date","getTime","fetch","response","text","fetchText","txt","Array","from","splitTableArray","TemplateParser","str","tag","parseTag","createLink","createImg","tagMatch","match","attr","map","tkn","src","getAttributeValue","className","alt","href","target","name","fa","filter","at","ContentSheet","props","isLoadCalled","state","isActive","this","load","nextProps","setState","sheetId","then","r","parseTemplate","tmp","i","key","React","Component","DataTable","isLoaded","data","c","slice","j","DataSheet","fetchTablesAsync","tbls","ChallengeBooks","sheets","id","role","st","isDisabled","data-toggle","onClick","onSheetClicked","cssClass","getTemplate","shts","s","sheetType","tabId","convertTableToObjectArray","retVal","head","cv","App","settings","header","headerImg","prizePool","convertTableToObject","style","fontSize","fontFamily","maxHeight","ChalangeBooks","obj","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.473a1e8d.chunk.js","sourcesContent":["class DataParser\r\n{\r\n    static *splitTableArray(tables)\r\n    {\r\n        var rows = tables.split('\\n');\r\n        var tbl = [];\r\n        var ri = 0;\r\n        while (ri < rows.length)\r\n        {\r\n            if (rows[ri].trim())\r\n            {\r\n                tbl.push(rows[ri].split('\\t'));\r\n            }\r\n            else\r\n            {\r\n                if (tbl.length > 0)\r\n                    yield tbl;\r\n                \r\n                tbl = [];\r\n            }\r\n            ri++;\r\n        }\r\n\r\n        if (tbl.length > 0)\r\n            yield tbl;\r\n    }\r\n\r\n    static async fetchText(documentId, grdId=0)\r\n    {\r\n        var url = `https://docs.google.com/spreadsheet/pub?hl=en_US&hl=en_US&key=${documentId}&single=true&gid=${grdId}&output=txt&_ts=${new Date().getTime()}`;\r\n        const response = await fetch(`${url}&_ts=${new Date().getTime()}`);\r\n        return await response.text();\r\n    }\r\n    \r\n    static async fetchTablesAsync(documentId, grdId=0)\r\n    {\r\n        var txt = await DataParser.fetchText(documentId, grdId);\r\n        return Array.from(DataParser.splitTableArray(txt));\r\n    }\r\n}\r\n\r\nexport default DataParser;","import React from 'react';\r\n\r\nclass TemplateParser\r\n{\r\n    static parseTemplate(str)\r\n    {\r\n        var tag = TemplateParser.parseTag(str);\r\n        if (!tag)\r\n            return str;\r\n        \r\n        switch(tag.tag)\r\n        {\r\n            case 'a':\r\n                return TemplateParser.createLink(tag);\r\n            case 'img':\r\n                return TemplateParser.createImg(tag);\r\n            default:\r\n                return str;\r\n        }\r\n    }\r\n\r\n    static parseTag(str)\r\n    {\r\n        const tagMatch = str.match(/!\\[(.*)\\]\\((.*)\\)/);\r\n        if (!tagMatch)\r\n            return null;\r\n        var tag = tagMatch[1];\r\n        var attr = tagMatch[2];\r\n        var attrTokens = attr.split(',').map(tkn => tkn.split('='));\r\n        return {tag: tag, attr: attrTokens };\r\n    }\r\n\r\n    static createImg(tag)\r\n    {\r\n        var src = TemplateParser.getAttributeValue(tag.attr, 'src');\r\n        return <img className='mt-3 mb-3' src={src} alt=''></img>\r\n    }\r\n\r\n    static createLink(tag)\r\n    {\r\n        var href = TemplateParser.getAttributeValue(tag.attr, 'href');\r\n        var txt = TemplateParser.getAttributeValue(tag.attr, 'txt');\r\n        var target = TemplateParser.getAttributeValue(tag.attr, 'target');\r\n\r\n        return <a href={href} target={target}>{txt || href}</a>\r\n    }\r\n\r\n    static getAttributeValue(attr, name)\r\n    {\r\n        if(!attr)\r\n            return '';\r\n        \r\n        var fa = attr.filter(at => at[0] === name);\r\n        if(!fa || fa.length === 0 || fa[0].length === 0)\r\n            return '';\r\n        return fa[0][1];\r\n    }\r\n}\r\n\r\nexport default TemplateParser;","import React from 'react';\r\nimport DataParser from './DataParser';\r\nimport TemplateParser from './TemplateParser';\r\n\r\nclass ContentSheet extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            isActive: props.isActive,\r\n            text: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isActive === 'FALSE')\r\n            return;\r\n\r\n        this.load();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        //You don't have to do this check first, but it can help prevent an unneeded render\r\n        if (nextProps.isActive !== this.state.isActive) {\r\n            this.setState({ isActive: nextProps.isActive });\r\n            \r\n            if (nextProps.isActive === 'TRUE')\r\n                this.load();\r\n        }\r\n    }\r\n    isLoadCalled = false;\r\n\r\n    load() {\r\n        if (this.isLoadCalled)\r\n            return;\r\n        \r\n        this.isLoadCalled = true\r\n\r\n        DataParser\r\n            .fetchText(this.props.documentId, this.props.sheetId)\r\n            .then(txt => this.setState({ text: txt }));\r\n    }\r\n\r\n    render() {\r\n        var rows = this.state.text.split('\\n');\r\n        var withTemplates = rows.map(r => TemplateParser.parseTemplate(r));\r\n        return withTemplates.map((tmp, i) => <div key={i}>{tmp}</div>);\r\n    }\r\n}\r\n\r\nexport default ContentSheet;","import React from 'react';\r\nimport DataParser from './DataParser';\r\n\r\nclass DataTable extends React.Component {\r\n\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            isLoaded: false\r\n        };\r\n    }\r\n    render() {\r\n        return <table className='table table-sm table-dark table-bordered'>\r\n            <thead>\r\n                <tr>\r\n                    {this.props.data[0].map((c, i) => <th key={i}>{c}</th>)}\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {this.props.data.slice(1).map((r, i) => <tr key={i}>{r.map((c, j) => <td key={j}>{c}</td>)}</tr>)}\r\n            </tbody>\r\n        </table>\r\n    }\r\n}\r\n\r\nclass DataSheet extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n\r\n        this.state = {\r\n            isActive: props.isActive,\r\n            tables: []\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.isActive === 'FALSE')\r\n            return;\r\n\r\n        this.load();\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        //You don't have to do this check first, but it can help prevent an unneeded render\r\n        if (nextProps.isActive !== this.state.isActive) {\r\n            this.setState({ isActive: nextProps.isActive });\r\n            \r\n            if (nextProps.isActive === 'TRUE')\r\n                this.load();\r\n        }\r\n    }\r\n\r\n    isLoadCalled = false;\r\n\r\n    load() {\r\n        if (this.isLoadCalled)\r\n            return;\r\n        \r\n        this.isLoadCalled = true\r\n\r\n        DataParser\r\n            .fetchTablesAsync(this.props.documentId, this.props.sheetId)\r\n            .then(tbls => this.setState({\r\n                tables: tbls\r\n            }));\r\n    }\r\n\r\n    render() {\r\n        return this.state.tables.map((tbl, i) => <div key={i}><DataTable data={tbl}></DataTable><hr /></div>)\r\n    }\r\n}\r\n\r\nexport default DataSheet;","import React from 'react';\r\nimport ContentSheet from './ContentSheet';\r\nimport DataSheet from './DataSheet';\r\n\r\nclass ChallengeBooks extends React.Component {\r\n    constructor(props) {\r\n        super();\r\n        this.state = {\r\n            sheets: props.sheets\r\n        };\r\n    }\r\n    \r\n    componentWillReceiveProps(nextProps) {\r\n        //You don't have to do this check first, but it can help prevent an unneeded render\r\n        if (nextProps.sheets !== this.state.sheets) {\r\n          this.setState({ sheets: nextProps.sheets });\r\n        }\r\n      }\r\n\r\n    render() {\r\n        return (<div><ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n            {this.state.sheets.map((st, i) => <li key={i} className=\"nav-item\" role=\"presentation\">\r\n                <a className={`nav-link ${st.isActive === 'TRUE' ? 'active' : ''} ${st.isDisabled === 'TRUE' ? 'disabled' : ''}`} id={`link-${st.id}`} data-toggle=\"pill\" href={`#pills-${st.id}`} role=\"tab\"\r\n                    onClick={()=>this.onSheetClicked(st)}>{st.name}</a>\r\n            </li>)}\r\n        </ul>\r\n            <div className=\"tab-content\" id=\"pills-tabContent\">\r\n                {this.state.sheets.map((st,i) => <div key={i} className={`tab-pane fade ${st.isActive === 'TRUE' ? 'show active' : ''} ${st.cssClass}`} id={`pills-${st.id}`} role=\"tabpanel\">\r\n                    {this.getTemplate(st)}\r\n                </div>)}\r\n            </div>\r\n        </div>);\r\n    }\r\n\r\n    onSheetClicked(st)\r\n    {\r\n        var shts = [...this.state.sheets];\r\n\r\n        for(let s of shts)\r\n        {\r\n            s.isActive = s.id === st.id ? 'TRUE' : 'FALSE'; \r\n        }\r\n\r\n\r\n        this.setState({sheets:shts});\r\n    }\r\n\r\n    getTemplate(st)\r\n    {\r\n        if (st.sheetType.trim() === 'TableSet')\r\n            return <DataSheet documentId={this.props.documentId} sheetId={st.tabId} isActive={st.isActive}/>;\r\n        \r\n        if (st.sheetType.trim() === 'Content')\r\n            return <ContentSheet documentId={this.props.documentId} sheetId={st.tabId} isActive={st.isActive}/>;\r\n            \r\n        \r\n        return <p>Unable to load....</p>;\r\n    }\r\n\r\n    buildSheets(tbls) {\r\n\r\n        this.setState({ sheets: this.convertTableToObjectArray(tbls[1]) })\r\n    }\r\n\r\n    convertTableToObjectArray(tbl) {\r\n        if (!tbl || tbl.length <= 1)\r\n            return [];\r\n\r\n        var retVal = [];\r\n        var head = tbl[0];\r\n\r\n        for (var ri = 1; ri < tbl.length; ri++) {\r\n            var cv = {};\r\n            for (var c = 0; c < head.length; c++) {\r\n                cv[head[c].trim()] = tbl[ri][c];\r\n            }\r\n            retVal.push(cv);\r\n        }\r\n\r\n        return retVal;\r\n    }\r\n}\r\n\r\nexport default ChallengeBooks;","import React from 'react';\nimport './App.css';\nimport ChalangeBooks from './ChalangeBooks';\nimport DataParser from './DataParser';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      settings: {\n        header: '',\n        headerImg: '',\n        prizePool: ''\n      },\n      sheets: []\n    };\n  }\n  componentDidMount() {\n    DataParser\n      .fetchTablesAsync('1rysFoH2wGvRTXOcq0kty6dNOmTY8ZEj71AgQOaXxcwk')\n      .then(tbls => this.setState({\n        settings: this.convertTableToObject(tbls[0]),\n        sheets: this.convertTableToObjectArray(tbls[1])\n      }));\n  }\n  render() {\n    return (<div>\n      <div className=\"container\">\n        <div className=\"row align-items-center\">\n          <div className=\"col\">\n            <h1 className=\"m-4\">{this.state.settings.header}</h1>\n          </div>\n          <div className=\"col-auto\">\n            <div className='prize-pool text-center'>\n              <div className='hl'>Prize Pool</div>\n              <div style={{ fontSize: '1.6em', fontFamily: 'Verdana,sans-serif' }}>{this.state.settings.prizePool}</div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style={{ maxHeight: 350 }} className=\"h-25 overflow-hidden\">\n        <img src={this.state.settings.headerImg} className=\"w-100\" alt='' />\n      </div>\n      <div className=\"container mt-4\">\n        <ChalangeBooks documentId='1rysFoH2wGvRTXOcq0kty6dNOmTY8ZEj71AgQOaXxcwk' sheets={this.state.sheets} />\n      </div>\n    </div>);\n  }\n\n  convertTableToObject(tbl) {\n    if (!tbl)\n      return {};\n    \n    var obj = {};\n    for(let i = 0; i < tbl.length; i++)\n    {\n      obj[tbl[i][0].trim()] = tbl[i][1].trim(); \n    }\n\n    return obj;\n  }\n\n  convertTableToObjectArray(tbl) {\n    if (!tbl || tbl.length <= 1)\n      return [];\n\n    var retVal = [];\n    var head = tbl[0];\n\n    for (var ri = 1; ri < tbl.length; ri++) {\n      var cv = {};\n      for (var c = 0; c < head.length; c++) {\n        cv[head[c].trim()] = tbl[ri][c];\n      }\n      retVal.push(cv);\n    }\n\n    return retVal;\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}